name: Deploy to AWS

on:
  workflow_dispatch:
permissions:
      id-token: write
      contents: read       

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: my-sqs-dynamodb-app
      ECS_CLUSTER: my-cluster
      ECS_SERVICE: my-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
           role-to-assume: arn:aws:iam::933085737869:role/github-OIDC-Connect
           aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          aws ecr create-repository --repository-name my-sqs-dynamodb-app
          docker build -t ${{ env.ECR_REPOSITORY }} .
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Create ECS Task Definition
        run: |
          # Retrieve current task definition
          task_def=$(aws ecs describe-task-definition --task-definition my-task-family)

          # Register updated task definition
          aws ecs register-task-definition --cli-input-json "$task_def"

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment

      - name: Monitor Deployment
        run: |
          echo "Deployment completed. Monitoring SQS and DynamoDB..."
